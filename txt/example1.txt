<?php

// Bookmark: generator.steps.php at line 542

/*
 * Database: hockus1_001
 * Table: a_test_table
 * Column count: 12
 * Filename: draft.hockus1_001.a_test_table.1.php
 * Created Mon, 05 Dec 2016 12:07:19 -0700
 * Primary key: smallint_column
 * Null columns: varchar_column
 * Key columns: flag_hidden_enum, deleted
 * All columns: smallint_column, varchar_column, email_varchar_column, http_varchar_column,
float_column, date_column, enum_column, set_column, text_column,
timestamp_column, flag_hidden_enum, deleted
*/

// Bookmark: header.php Bootstrap layout options generator.steps.php at line 658

$omit_div_container = 0; // Default is 0. Set 1 for a 100%-wide layout in List mode (1 = omit DIV CONTAINER)

// Bookmark: generator.steps.php at line 667

$opts['tb'] = 'a_test_table';

$sn = 0; // server number

require_once('inc/pme.config.php'); // options, db handle, and header

require_once('inc/header.php'); // header

//echo '<h2 class="text-info">'.$opts['db'].'.'.$opts['tb'].'</h2>'."\n";

$opts['sort_field'] = array('smallint_column');

$opts['key'] = 'smallint_column'; // primary key

$opts['key_type'] = 'smallint';

$opts['options'] = 'ACPVDFL';

// Bookmark: generator.steps.php at line 789

// Initialize toggle variables based on column number
$z5 = get_cgi_var('z5');
$z6 = get_cgi_var('z6');
$z7 = get_cgi_var('z7');
$z8 = get_cgi_var('z8');
$z9 = get_cgi_var('z9');
$z10 = get_cgi_var('z10');
$z11 = get_cgi_var('z11');

// $sn and toggle variables must be persistent.
$opts['cgi']['persist'] = array('sn' => $sn, 'z5' => $z5, 'z6' => $z6, 'z7' => $z7, 'z8' => $z8, 'z9' => $z9, 'z10' => $z10, 'z11' => $z11);

// Buffer the togglg links in order to facilitate flexible display
$my_link_buffer = '';

if($list_mode_status == 1){
   $bqs = ''; // buffered query string (phpMyEdit system variables)
   $ignore_keys = array(
	      'PME_sys_canceladd',
	      'PME_sys_cancelcopy',
	      'PME_sys_canceldelete',
	      'PME_sys_cancelview',
	      'PME_sys_cur_tab',
	      'PME_sys_moreadd',
	      'PME_sys_qfn',
	      'PME_sys_savechange'
	   );
   foreach($_REQUEST as $key => $val){
	      if(substr($key, 0, 8) == 'PME_sys_' && !in_array($key, $ignore_keys)){
	         if(is_array($val)){
	            foreach($val as $k => $v){
	               $bqs .= '&'.$k.'='.$v;
	            }
	         }else{
	            $bqs .= '&'.$key.'='.$val;
	         }
	      }
	   }
		
   // calculate opposite values beginning with MySQL column #5 ($pme['list_mode_num_cols'])
   $tmp5 = '&z5='.(empty($z5) ? 1 : 0);
   $tmp6 = '&z6='.(empty($z6) ? 1 : 0);
   $tmp7 = '&z7='.(empty($z7) ? 1 : 0);
   $tmp8 = '&z8='.(empty($z8) ? 1 : 0);
   $tmp9 = '&z9='.(empty($z9) ? 1 : 0);
   $tmp10 = '&z10='.(empty($z10) ? 1 : 0);
   $tmp11 = '&z11='.(empty($z11) ? 1 : 0);

   // template used to apply the above values
   $tpl = '&z5=%s&z6=%s&z7=%s&z8=%s&z9=%s&z10=%s&z11=%s';

   // Note the progressive shift from one column to the next
   $my_link_buffer .= htmlLink(sprintf($tpl, $tmp5, $z6, $z7, $z8, $z9, $z10, $z11), 'Date Column', $z5);
   $my_link_buffer .= htmlLink(sprintf($tpl, $z5, $tmp6, $z7, $z8, $z9, $z10, $z11), 'Enum Column', $z6);
   $my_link_buffer .= htmlLink(sprintf($tpl, $z5, $z6, $tmp7, $z8, $z9, $z10, $z11), 'Set Column', $z7);
   $my_link_buffer .= htmlLink(sprintf($tpl, $z5, $z6, $z7, $tmp8, $z9, $z10, $z11), 'Text Column', $z8);
   $my_link_buffer .= htmlLink(sprintf($tpl, $z5, $z6, $z7, $z8, $tmp9, $z10, $z11), 'Timestamp Column', $z9);
   $my_link_buffer .= htmlLink(sprintf($tpl, $z5, $z6, $z7, $z8, $z9, $tmp10, $z11), 'Flag Hidden Enum', $z10);
   $my_link_buffer .= htmlLink(sprintf($tpl, $z5, $z6, $z7, $z8, $z9, $z10, $tmp11), 'Deleted', $z11);
}


if(empty($z11)){ $opts['filters'] = 'PMEtable0.deleted = "0"'; }

$opts['triggers']['delete']['before'] = 'inc/triggers/mark_as_deleted.TDB.php';

echo "\n".'<div class="row">';

// possibly 2 DIV col entries ahead, usually col-lg-2 and col-lg-10
// if($list_mode_status && !empty($my_link_buffer)){
//    echo "\n".'<div class="col-sm-2">'."\n";
//    echo "\n".'<div class="card sidebar-nav">'."\n";
//    echo "\n".'<ul class="nav nav-pills nav-stacked">'."\n";
//    echo $my_link_buffer;
//    echo "\n".'</ul>'."\n";
//    echo "\n".'</div><!-- /card -->';
//    echo "\n".'</div><!-- /col-lg-2 -->';
// }

// Consider un-commenting the above loop and below changing col-lg-12 to col-lg-10
echo "\n".'<div class="col-sm-12">'."\n"; // col-lg- for phpMyEdit form

// Begin phpMyEdit column array compilation in generator.steps.php at line 1048

// column 0: `smallint_column` smallint(5)
// flags: auto_increment

$opts['fdd']['smallint_column'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => '',
  'help|ACP'   => 'comment for smallint_column',
  'input'      => 'R',
  'name'       => 'Smallint Column',
  'options'    => 'VD', // to display in List mode, or set VDFL
  'select'     => 'T',
  'size'       => 5,
  'sort'       => true
);
// If the tab feature is implemented, the first column must have a tab
// $opts['fdd']['smallint_column']['tab|ACP'] = 'Smallint Column';


// column 1: `varchar_column` varchar(255)

$opts['fdd']['varchar_column'] = array(
  'default'    => '',
  'help|ACP'   => 'comment for varchar_column',
  'input'      => '',
  'maxlen|ACP' => 255,
  'name'       => 'Varchar Column',
  'options'    => 'ACPVDFL',
  'select'     => 'T',
  'size'       => 72,
  'sqlw'       => 'IF($val_qas = "", NULL, $val_qas)',
  'sort'       => true
);


// column 2: `email_varchar_column` varchar(255)

$opts['fdd']['email_varchar_column'] = array(
  'default'    => '',
  'help|ACP'   => 'enter an email address e.g. none@foo.net',
  'input'      => '',
  'maxlen|ACP' => 255,
  'name'       => 'Email Varchar Column',
  'options'    => 'ACPVDFL',
  'select'     => 'T',
  'size'       => 72,
  'sqlw'       => 'TRIM("$val_as")',
  'URL'        => 'mailto:$value',
  'sort'       => true
);


// column 3: `http_varchar_column` varchar(255)

$opts['fdd']['http_varchar_column'] = array(
  'default'    => '',
  'help|ACP'   => 'Enter a domain name e.g. google.com',
  'input'      => '',
  'maxlen|ACP' => 255,
  'name'       => 'Http Varchar Column',
  'options'    => 'ACPVDFL',
  'select'     => 'T',
  'size'       => 72,
  'sqlw'       => 'TRIM("$val_as")',
  'URL'        => 'http://$value',
  'URLtarget'  => '_blank',
//  'URLdisp'    => 'Visit',
  'sort'       => true
);


// column 4: `float_column` float(8,2)

$opts['fdd']['float_column'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => '1.23',
  'help|ACP'   => 'comment for float_column',
  'input'      => '',
  'maxlen|ACP' => 11,
  'number_format|VDFL' => array(2, '.', ','),
  'name'       => 'Float Column',
  'options'    => 'ACPVDFL',
  'select'     => 'T',
  'size'       => 8,
  'sqlw'       => 'TRIM("$val_as")',
  'sort'       => true
);


// column 5: `date_column` date

$opts['fdd']['date_column'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => '',
  'help|ACP'   => 'comment for date_column',
  'input'      => '',
  'maxlen|ACP' => 10,
  'name'       => 'Date Column',
  'options'    => $z5 ? 'ACPVDFL' : 'ACPVD',
  'select'     => 'N',
  'size'       => 10,
  'sqlw'       => 'TRIM("$val_as")',
//  'sql|VFL'     => 'if(float_column > "", CONCAT(DATE_FORMAT(float_column, "%a %b %e %Y")), "")',
  'sort'       => true
);


// column 6: `enum_column` enum('0','1','2','3','4','5')

$opts['fdd']['enum_column'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => 0,
  'help|ACP'   => 'comment for enum_column',
  'input'      => '',
  'maxlen|ACP' => 1,
  'name'       => 'Enum Column',
  'options'    => $z6 ? 'ACPVDFL' : 'ACPVD',
  'select'     => 'D',
  'sqlw'       => 'TRIM("$val_as")',
  'values'     => array('0','1','2','3','4','5'), 
  'sort'       => true
);


// column 7: `set_column` set('a','b','c')

$opts['fdd']['set_column'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => '',
  'help|ACP'   => 'comment for set_column',
  'input'      => '',
  'maxlen|ACP' => 5,
  'name'       => 'Set Column',
  'options'    => $z7 ? 'ACPVDFL' : 'ACPVD',
  'select'     => 'M',
  'sqlw'       => 'TRIM("$val_as")',
  'values'     => array('a','b','c'), 
  'sort'       => true
);


// column 8: `text_column` text

$opts['fdd']['text_column'] = array(
  'default'    => '',
  'escape|VFL' => false, // set true if the column contains HTML markup
  'help|ACP'   => 'comment for text_column',
  'input'      => '',
  'maxlen|ACP' => 65535,
  'name'       => 'Text Column',
  'options'    => $z8 ? 'ACPVDFL' : 'ACPVD',
  'select'     => 'T',
  'sqlw'       => 'TRIM("$val_as")',
//  'strip_tags|FL' => true,
  'textarea'   => array('rows' => 10, 'cols' => 90),
  'trimlen|FL' => 50,
  'sort'       => false
);


// column 9: `timestamp_column` timestamp
// flags: on, update, CURRENT_TIMESTAMP

$opts['fdd']['timestamp_column'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => '',
  'help|ACP'   => 'comment for timestamp_column',
  'input'      => 'R',
  'maxlen|ACP' => 19,
  'name'       => 'Timestamp Column',
  'options'    => $z9 ? 'ACPVDFL' : 'VD',
  'select'     => 'N',
  'size'       => 19,
  'sqlw'       => 'TRIM("$val_as")',
  'sort'       => true
);


// column 10: `flag_hidden_enum` enum('0','1')

$opts['fdd']['flag_hidden_enum'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => 0,
  'help|ACP'   => 'comment for flag_hidden_enum',
  'input'      => '',
  'maxlen|ACP' => 1,
  'name'       => 'Flag Hidden Enum',
  'options'    => $z10 ? 'ACPVDFL' : 'ACPVD',
  'select'     => 'D',
  'sqlw'       => 'TRIM("$val_as")',
  'values'     => array('0','1'), 
  'sort'       => true
);


// column 11: `deleted` enum('0','1')

$opts['fdd']['deleted'] = array(
  'css'        => array('postfix' => 'right-justify'),
  'default'    => 0,
  'help|ACP'   => 'comment for deleted',
  'input'      => '',
  'maxlen|ACP' => 1,
  'name'       => 'Deleted',
  'options'    => $z11 ? 'ACPVDFL' : '',
  'select'     => 'D',
  'sqlw'       => 'TRIM("$val_as")',
  'values2'    => array('0' => 'No', '1' => 'Yes'),
  'sort'       => true
);
// Bookmark: omit ['js']['required'] for Author preference for specific column names

// Bookmark: generator.steps.php at line 1913

require_once('inc/phpMyEdit.mysqli.php');

if(array_key_exists('PME_sys_moreadd', $_REQUEST) || (isset($_REQUEST['PME_sys_operation']) && $_REQUEST['PME_sys_operation'] == 'Add')){ $opts['cgi']['overwrite']['deleted'] = '0'; }

new phpMyEdit($opts);

if($warnings = mysqli_get_warnings($opts['dbh'])){
   printf('<p class="text-danger">Warnings: %s</p>', htmlentities(implode(', ', $warnings)));
}

mysqli_close($opts['dbh']);

if(!empty($my_link_buffer)){
   echo "\n".'<div class="btn-group dropup">'."\n";
   echo "\n".'<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Field toggle <span class="caret"></span> </button>'."\n";
   echo "\n".'<div class="dropdown-menu scrollable-menu" role="menu">'."\n";
   echo $my_link_buffer;
   echo "\n".'</div>'."\n";
   echo "\n".'</div>'."\n";
}


echo "\n".'</div>'; // close the col

echo "\n".'</div>'; // close the row

require_once('inc/footer.php');

// Bookmark: generator.steps.php at line 1982

?>
